body{
    display: flex;
    height: 100vh;
    margin: 10px;
    font-family: sans-serif;
}

.container{
    margin: auto;
    width: 60%;
    display: grid;
    grid-gap: 4px;

    /* Pour définir la taille de la grille, on change de logique...
    Ici, on va plutot diviser la grille en 10 lignes et 12 colonnes
    et ensuite assigner à chaque élément occupant la grille une dimension différente.
    */
    grid-template-rows: repeat(10, 1fr);
    grid-template-columns: repeat(12, 1fr);

    /* Pour que le découpage soit plus facile à visualiser, 
    j'ai placé une image de fond aux éléments qui constitue la grille. 
    Comme pour une feuille quadrillée, vous pouvez voir la grille en fond. 
    */
}


.header{
    grid-column: 1 / -1;

    /* On dit ici qu'on veut que le header occupe 
    verticalement l'espace qui correspond à deux lignes.
    */
    grid-row: span 2;

    background-image: url("img/12x2.png");
    background-size: 100% 100%;
}

.footer{
    grid-column: 1 / -1;

    background-image: url("img/12x1.png");
    background-size: 100% 100%;
}

.menu{
    /* Ici, on précise que notre menu doit faire
    2 colonnes de largeur et
    7 lignes de hauteur.
     */
    grid-column: span 2;
    grid-row: span 7;

    background-image: url("img/2x7.png");
    background-size: 100% 100%;
}

.content{
    grid-column: span 5;

    background: url("img/5x1.png");
    background-size: 100% 100%;
}

.featured{
    grid-column: span 10;
    grid-row: span 4;

    background-image: url("img/10x4.png");
    background-size: 100% 100%;
}




.container > div{
    display: flex;
    justify-content: center;
    align-items: center;

    padding: 10px;
    font-size: 2em;
    color: white;
    background-color: rgb(151, 84, 240);
    opacity: 0.5;
}


/* Les lignes qui suivent servent à colorer différenmment les éléments */
.container > div:nth-child(3){
    background-color: rgb(15, 129, 206);
}
.container > div:first-child,
.container > div:last-child{
    background-color: rgb(218, 135, 28);
}
.container > div:nth-child(2){
    background-color: rgb(30, 179, 0);
}

.container > div:hover{
    opacity: 1;
}